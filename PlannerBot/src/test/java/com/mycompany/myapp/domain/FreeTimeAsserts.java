package com.mycompany.myapp.domain;

import static com.mycompany.myapp.domain.AssertUtils.zonedDataTimeSameInstant;
import static org.assertj.core.api.Assertions.assertThat;

public class FreeTimeAsserts {

    /**
     * Asserts that the entity has all properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertFreeTimeAllPropertiesEquals(FreeTime expected, FreeTime actual) {
        assertFreeTimeAutoGeneratedPropertiesEquals(expected, actual);
        assertFreeTimeAllUpdatablePropertiesEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all updatable properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertFreeTimeAllUpdatablePropertiesEquals(FreeTime expected, FreeTime actual) {
        assertFreeTimeUpdatableFieldsEquals(expected, actual);
        assertFreeTimeUpdatableRelationshipsEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all the auto generated properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertFreeTimeAutoGeneratedPropertiesEquals(FreeTime expected, FreeTime actual) {
        assertThat(expected)
            .as("Verify FreeTime auto generated properties")
            .satisfies(e -> assertThat(e.getId()).as("check id").isEqualTo(actual.getId()));
    }

    /**
     * Asserts that the entity has all the updatable fields set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertFreeTimeUpdatableFieldsEquals(FreeTime expected, FreeTime actual) {
        assertThat(expected)
            .as("Verify FreeTime relevant properties")
            .satisfies(
                e -> assertThat(e.getStart()).as("check start").usingComparator(zonedDataTimeSameInstant).isEqualTo(actual.getStart())
            )
            .satisfies(e -> assertThat(e.getEnd()).as("check end").usingComparator(zonedDataTimeSameInstant).isEqualTo(actual.getEnd()));
    }

    /**
     * Asserts that the entity has all the updatable relationships set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertFreeTimeUpdatableRelationshipsEquals(FreeTime expected, FreeTime actual) {}
}
